--- users table init
CREATE TABLE public.users (
    id UUID DEFAULT gen_random_uuid() primary key,
    email TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL,
    full_name TEXT NOT NULL,
    telephone_number TEXT NOT NULL UNIQUE,
    is_premium BOOLEAN DEFAULT FALSE,
    city TEXT,
    rating DECIMAL(3, 2) DEFAULT 0
);

COMMENT ON COLUMN public.users.id IS 'user unique id';
COMMENT ON COLUMN public.users.email IS 'user unique email';
COMMENT ON COLUMN public.users.password IS 'user password';
COMMENT ON COLUMN public.users.full_name IS 'user full name';
COMMENT ON COLUMN public.users.telephone_number IS 'user unique phone number';
COMMENT ON COLUMN public.users.is_premium IS 'premium unlocks some premium features';
COMMENT ON COLUMN public.users.city IS 'user location';
COMMENT ON COLUMN public.users.rating IS 'user rating which created by other users rates';


--- cars table init
CREATE TABLE cars (
  id varchar(8) UNIQUE PRIMARY KEY,
  brand TEXT,
  model TEXT,
  year numeric(4,0),
  price_per_day numeric(10, 2),
  is_available boolean default true,
  rating float default 0.0
);


--- car_images table init
CREATE TABLE car_images (
    id SERIAL PRIMARY KEY,
    url TEXT,
    car_id VARCHAR REFERENCES public.cars(id)
);


--- cars_users table init
CREATE TABLE public.cars_users (
    car_id varchar(8) REFERENCES public.cars(id),
    user_id uuid REFERENCES public.users(id)
);

--- reservations table init
CREATE TABLE reservations (
    id SERIAL PRIMARY KEY,
    customer_id uuid references users(id),
    seller_id uuid references users(id),
    car_id varchar(8) references cars(id),
    start_date timestamp,
    end_date timestamp,
    total_price numeric(10, 2)
);

--- ratings table init
CREATE TABLE ratings (
    rate float CHECK ( rate <= 5.0 and rate >= 1.0),
    comment text,
    user_id uuid references users (id),
    rate_by_user uuid references users (id)
);